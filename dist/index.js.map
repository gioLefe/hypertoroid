{
  "version": 3,
  "sources": ["../src/core/di-container.ts", "../src/core/scene-manager.ts", "../src/core/assets-manager.ts", "../src/models/game.ts", "../src/core/audio-controller.ts", "../src/core/settings.ts", "../src/helpers/canvas.ts", "../src/helpers/math.ts", "../src/helpers/polygon.ts", "../src/helpers/rect-collision.ts", "../src/helpers/sat-collision.ts", "../src/models/game-object.ts", "../src/models/structs/linked-list.ts", "../src/models/structs/quad-tree.ts", "../src/models/unit-vector.ts", "../src/ui/with-events.ts", "../src/ui/canvas/helpers/text.ts", "../src/ui/controls/label.ts", "../src/ui/controls/clickable-label.ts", "../src/ui/controls/panel.ts"],
  "sourcesContent": ["/**\n * A Dependency Injection (DI) container for registering and resolving dependencies.\n * This class follows the Singleton pattern to ensure only one instance is used.\n */\nexport class DIContainer {\n  /**\n   * The single instance of the DIContainer.\n   * @type {DIContainer}\n   * @private\n   * @static\n   */\n  private static instance: DIContainer;\n\n  /**\n   * A map to store registered dependencies.\n   * @type {Map<string, any>}\n   * @private\n   */\n  private dependencies: Map<string, any> = new Map();\n\n  /**\n   * Private constructor to prevent direct instantiation.\n   * Use {@link DIContainer.getInstance} to get the single instance of this class.\n   * @private\n   */\n  private constructor() {}\n\n  /**\n   * Gets the single instance of the DIContainer.\n   * If no instance exists, it creates one.\n   *\n   * @returns {DIContainer} The singleton instance of the DIContainer.\n   * @static\n   */\n  static getInstance(): DIContainer {\n    if (!DIContainer.instance) {\n      DIContainer.instance = new DIContainer();\n    }\n    return DIContainer.instance;\n  }\n\n  /**\n   * Registers a dependency with a specific name.\n   *\n   * @template T\n   * @param {string} name - The name of the dependency.\n   * @param {T} dependency - The dependency to register.\n   * @returns {void}\n   */\n  register<T>(name: string, dependency: T): void {\n    this.dependencies.set(name, dependency);\n  }\n\n  /**\n   * Resolves a dependency by its name.\n   * Throws an error if the dependency is not found.\n   *\n   * @template T\n   * @param {string} name - The name of the dependency to resolve.\n   * @returns {T} The resolved dependency.\n   * @throws {Error} If the dependency is not found.\n   */\n  resolve<T>(name: string): T {\n    const dependency = this.dependencies.get(name);\n    if (!dependency) {\n      throw new Error(`Dependency ${name} not found`);\n    }\n    return dependency;\n  }\n}\n", "import { CanvasScene2D } from \"../models/canvas-scene\";\nimport { SceneHandler } from \"./models/scene-handler\";\n\nexport class SceneManager implements SceneHandler {\n  private currentScenes: CanvasScene2D[] = [];\n  private scenes: CanvasScene2D[] = [];\n\n  addScene(scene: CanvasScene2D): void {\n    if (this.scenes.findIndex((s) => s.id === scene?.id) !== -1) {\n      console.warn(\"Scene with same id already exists, provide a new id\");\n      return;\n    }\n    this.scenes.push(scene);\n  }\n  deleteScene(id: string): void {\n    const i = this.getSceneIndex(id, this.currentScenes);\n    this.currentScenes[i].clean();\n    this.currentScenes = this.currentScenes.filter((_, index) => index !== i);\n  }\n  getCurrentScenes(): CanvasScene2D[] | undefined {\n    return this.currentScenes;\n  }\n\n  /**\n   * Changes the current scene to a new scene specified by the given ID.\n   *\n   * This function initializes the new scene, optionally initializes a loading scene, and updates\n   * the current scenes stack. It also handles cleaning up the previous scene state if specified.\n   *\n   * @param {string} id - The ID of the new scene to transition to.\n   * @param {boolean} [cleanPreviousState=true] - A flag indicating whether to clean up the previous scene state.\n   * @param {string} [loadingSceneId] - The ID of an optional loading scene to display while the new scene is initializing.\n   * @returns {Promise<void>} A promise that resolves when the scene transition is complete.\n   */\n  async changeScene(\n    id: string,\n    cleanPreviousState: boolean = true,\n    loadingSceneId?: string,\n  ): Promise<void> {\n    const lastCurrentSceneId =\n      this.currentScenes[this.currentScenes.length - 1]?.id;\n    const newScene = this.scenes[this.getSceneIndex(id, this.scenes)];\n\n    if (loadingSceneId !== undefined) {\n      const loadingSceneIndex = this.getSceneIndex(loadingSceneId, this.scenes);\n      let loadingScene: CanvasScene2D = this.scenes[loadingSceneIndex];\n      const loadingSceneInitPromises = loadingScene.init();\n      if (loadingSceneInitPromises !== undefined) {\n        await loadingSceneInitPromises;\n      }\n      this.currentScenes.push(loadingScene);\n    }\n\n    const newSceneInitPromises = newScene.init();\n\n    if (newSceneInitPromises !== undefined) {\n      await newSceneInitPromises;\n    }\n    if (cleanPreviousState && lastCurrentSceneId !== undefined) {\n      this.deleteScene(lastCurrentSceneId);\n    }\n    if (loadingSceneId !== undefined) {\n      this.deleteScene(loadingSceneId);\n    }\n    this.currentScenes.push(newScene);\n  }\n\n  private getSceneIndex(id: string, scenes: CanvasScene2D[]) {\n    const loadingSceneIndex = scenes.findIndex((s) => s.id === id);\n    if (loadingSceneIndex === -1) {\n      throw new Error(`cannot find scene with id ${id}`);\n    }\n    return loadingSceneIndex;\n  }\n}\n", "import { ImageAsset, SoundAsset, Tag } from \"../models/asset\";\nimport { AssetsHandler } from \"./models/assets-handler\";\nimport { GameAsset } from \"./models/game-asset\";\n\nexport class AssetsManager implements AssetsHandler {\n  assets: Map<string, ImageAsset | SoundAsset> = new Map();\n\n  add(assetRequests: GameAsset[]): Promise<void>[] {\n    return assetRequests.map((request) =>\n      this.createObjectPromise(this, request),\n    );\n  }\n\n  find<T>(id: string): T | undefined {\n    if (this.assets.has(id) === false) {\n      throw new Error(`cannot find asset ${id}`);\n    }\n    return this.assets.get(id) as T;\n  }\n  delete(id: string): void {\n    this.assets.delete(id);\n  }\n  addTag(id: string, tag: Tag): void {\n    const a = this.assets.get(id);\n    if (a === undefined) {\n      console.warn(`cannot find asset ${id}`);\n      return;\n    }\n    a.tags.push(tag);\n    this.assets.set(id, a);\n  }\n\n  private createObjectPromise(\n    assetManagerHandle: this,\n    assetRequest: GameAsset,\n  ): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      let obj: HTMLImageElement | HTMLAudioElement;\n\n      if (assetRequest.type === \"AUDIO\") {\n        const request = new XMLHttpRequest();\n        request.open(\"GET\", assetRequest.path, true);\n        request.responseType = \"arraybuffer\"; // generic raw binary data buffer -> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\n        request.onload = function () {\n          assetManagerHandle.assets.set(assetRequest.id, {\n            source: request.response,\n            tags: [],\n          });\n          return resolve();\n        };\n        request.send();\n        return;\n      }\n\n      obj = new Image();\n      obj.onload = function () {\n        assetManagerHandle.assets.set(assetRequest.id, {\n          source: obj as HTMLImageElement,\n          tags: [],\n        });\n        return resolve();\n      };\n      obj.onerror = function () {\n        reject(`cannot load ${assetRequest.id} at ${assetRequest.path}`);\n      };\n      obj.src = assetRequest.path;\n    });\n  }\n}\n", "import {\n  DIContainer,\n  SceneHandler,\n  Settings,\n  SceneManager,\n  AudioController,\n  AssetsManager,\n} from \"../core\";\nimport { AssetsHandler } from \"../core/models/assets-handler\";\nimport { GameCycle } from \"./game-cycle\";\n\nexport const SCENE_MANAGER_DI = \"SceneManager\";\nexport const ASSETS_MANAGER_DI = \"AsetsManager\";\n\nexport abstract class Game implements GameCycle {\n  protected canvas: HTMLCanvasElement;\n  protected ctx: CanvasRenderingContext2D;\n\n  private lastUpdateTime: number = 0;\n  private deltaTime: number = 0;\n  private frameInterval: number = 0;\n  private diContainer = DIContainer.getInstance();\n\n  protected sceneManager: SceneHandler | undefined;\n  protected assetsManager: AssetsHandler | undefined;\n  protected settingsManager: Settings | undefined;\n\n  private debug: { init: boolean; update: boolean; render: boolean } = {\n    init: false,\n    update: false,\n    render: false,\n  };\n\n  constructor(\n    canvas: HTMLCanvasElement,\n    canvasWidth: number,\n    canvasHeight: number,\n    fps: number = 30,\n  ) {\n    if (canvas === null) {\n      console.error(`%c *** Error, Canvas cannot be null`);\n      throw Error();\n    }\n\n    this.canvas = canvas;\n    this.canvas.width = canvasWidth;\n    this.canvas.height = canvasHeight;\n\n    const context = this.canvas.getContext(\"2d\");\n    if (context === null) {\n      throw Error(\"ctx is null\");\n    }\n\n    this.ctx = context;\n\n    this.lastUpdateTime = 0;\n    this.deltaTime = 0;\n    this.frameInterval - 1000 / fps;\n\n    this.init();\n  }\n  clean(..._args: any) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  init(): void {\n    if (this.debug.init) {\n      console.log(`%c *** Init`, `background:#020; color:#adad00`);\n    }\n\n    this.sceneManager = new SceneManager();\n    this.assetsManager = new AssetsManager();\n    this.settingsManager = new Settings();\n    this.diContainer.register<SceneHandler>(\n      SCENE_MANAGER_DI,\n      this.sceneManager,\n    );\n    this.diContainer.register<AssetsHandler>(\n      ASSETS_MANAGER_DI,\n      this.assetsManager,\n    );\n    this.diContainer.register<AudioController>(\n      AudioController.AUDIO_CONTROLLER_DI,\n      new AudioController(),\n    );\n    this.diContainer.register<Settings>(\n      Settings.SETTINGS_DI,\n      this.settingsManager,\n    );\n  }\n\n  update(deltaTime: number): void {\n    if (this.debug.update) {\n      console.log(`%c *** Update`, `background:#020; color:#adad00`);\n    }\n\n    this.sceneManager\n      ?.getCurrentScenes()\n      ?.forEach((scene) => scene.update(deltaTime));\n  }\n\n  render(..._args: any): void {\n    if (this.debug.render) {\n      console.log(`%c *** Render`, `background:#020; color:#adad00`);\n    }\n    this.ctx?.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    const currentScenes = this.sceneManager?.getCurrentScenes();\n    if (currentScenes === undefined) {\n      console.warn(\"no scene to render\");\n      return;\n    }\n\n    currentScenes.forEach((scene) => scene.render(this.ctx));\n  }\n\n  gameLoop = (timestamp: number): void => {\n    const elapsed = timestamp - this.lastUpdateTime;\n    if (elapsed > this.frameInterval) {\n      this.deltaTime = elapsed / 1000; // Convert to\n      this.lastUpdateTime = timestamp;\n\n      this.update(this.deltaTime);\n      this.render(this.ctx);\n    }\n\n    requestAnimationFrame(this.gameLoop);\n  };\n\n  start(): void {\n    this.lastUpdateTime = performance.now();\n    this.gameLoop(this.lastUpdateTime);\n  }\n}\n", "import { SoundAsset } from \"../models/asset\";\r\nimport { ASSETS_MANAGER_DI } from \"../models/game\";\r\nimport { AssetsManager } from \"./assets-manager\";\r\nimport { DIContainer } from \"./di-container\";\r\nimport { AudioPlayingOptions } from \"./models/audio-playing-options\";\r\n\r\nconst MAX_VOLUME = 1;\r\n\r\nexport class AudioController {\r\n  static AUDIO_CONTROLLER_DI = \"AudioController\";\r\n\r\n  private assetsManager =\r\n    DIContainer.getInstance().resolve<AssetsManager>(ASSETS_MANAGER_DI);\r\n  private audioContext = new AudioContext();\r\n  private mainGainNode = this.audioContext.createGain();\r\n  private playingSounds: Record<string, AudioPlayingOptions> = {};\r\n\r\n  constructor() {\r\n    this.mainGainNode.gain.value = MAX_VOLUME;\r\n    this.mainGainNode.connect(this.audioContext.destination);\r\n  }\r\n\r\n  get playingAssetsIds() {\r\n    return Object.keys(this.playingSounds);\r\n  }\r\n\r\n  setMainVolume(value: number) {\r\n    this.mainGainNode.gain.value =\r\n      value >= 0 && value <= MAX_VOLUME ? value : MAX_VOLUME;\r\n  }\r\n\r\n  getMainVolume(): number {\r\n    return this.mainGainNode.gain.value;\r\n  }\r\n\r\n  playAsset(\r\n    id: string,\r\n    audioPlayingOptions: AudioPlayingOptions = { loop: false, force: true },\r\n  ) {\r\n    const soundAsset: SoundAsset | undefined =\r\n      this.assetsManager.find<SoundAsset>(id);\r\n    if (soundAsset === undefined) {\r\n      console.warn(\"Can`t find asset\", id);\r\n    }\r\n    if (\r\n      this.playingAssetsIds.indexOf(id) > -1 &&\r\n      audioPlayingOptions.force === false\r\n    ) {\r\n      return;\r\n    }\r\n    this.playingSounds[id] = audioPlayingOptions;\r\n\r\n    const arrayBuffer = this.assetsManager.find<SoundAsset>(id)?.source;\r\n    if (arrayBuffer === undefined) {\r\n      return;\r\n    }\r\n\r\n    // THIS IS INCONVENIENT!\r\n    // we are doing 2 operations (cloning buffer, and then decode) each time we want to play a sound, and this comes at a cost!\r\n    // Look for a solution\r\n    this.audioContext\r\n      .decodeAudioData(arrayBuffer.slice(0))\r\n      .then((audioBuffer) => {\r\n        const audioBufferSourceNode = this.audioContext.createBufferSource();\r\n        audioBufferSourceNode.buffer = audioBuffer;\r\n        audioBufferSourceNode.connect(this.mainGainNode);\r\n        audioBufferSourceNode.start();\r\n        audioBufferSourceNode.loop = audioPlayingOptions.loop;\r\n        audioBufferSourceNode.addEventListener(\"ended\", () => {\r\n          Object.entries(this.playingSounds).forEach((n) => {\r\n            if (n[0] === id) {\r\n              console.log(`Audio buffer ended event: ${id}`);\r\n              delete this.playingSounds[id];\r\n            }\r\n          });\r\n        });\r\n      });\r\n  }\r\n}\r\n", "export const CANVAS_WIDTH = \"canvasW\";\r\nexport const CANVAS_HEIGHT = \"canvasH\";\r\n\r\nexport class Settings {\r\n  static SETTINGS_DI = \"settings\";\r\n  \r\n  private settings = new Map<string, unknown>();\r\n\r\n  get<T extends unknown>(key: string): T | undefined {\r\n    if (!this.settings.has(key)) {\r\n      return undefined;\r\n    }\r\n    return this.settings.get(key) as T;\r\n  }\r\n\r\n  set<T extends unknown>(key: string, value: T): void {\r\n    this.settings = this.settings.set(key, value);\r\n  }\r\n}\r\n", "export function drawRotated(\n  ctx: CanvasRenderingContext2D,\n  canvasW: number,\n  canvasH: number,\n  img: HTMLImageElement,\n  degrees: number,\n) {\n  ctx.clearRect(0, 0, canvasW, canvasH);\n\n  // save the unrotated ctx of the canvas so we can restore it later\n  // the alternative is to untranslate & unrotate after drawing\n  ctx.save();\n\n  // move to the center of the canvas\n  ctx.translate(canvasW / 2, canvasH / 2);\n\n  // rotate the canvas to the specified degrees\n  ctx.rotate((degrees * Math.PI) / 180);\n\n  // draw the image\n  // since the ctx is rotated, the image will be rotated also\n  ctx.drawImage(img, -img.width / 2, -img.width / 2);\n\n  // we\u2019re done with the rotating so restore the unrotated ctx\n  ctx.restore();\n}\n", "import { MinMax } from \"../models/min-max\";\nimport { Vec2 } from \"../models/vec\";\n\nexport function getVectorPerpendicular(\n  axis: Vec2<number>,\n): Vec2<number> | null {\n  if (!axis) {\n    console.warn(`%c *** axis is null`, `background:#222; color: #bada55`);\n    return null;\n  }\n\n  return { x: -axis.y, y: axis.x };\n}\n\n/** Checks for overlap between tw intervalso */\nexport function intervalsOverlap(\n  intervalA: MinMax,\n  intervalB: MinMax,\n): boolean {\n  return !(intervalA.max < intervalB.min || intervalB.max < intervalA.min);\n}\n\n/**\n * Returns a 'number' with decimals up to the precision\n * @param num\n * @param precision\n * @returns\n */\nexport function toPrecisionNumber(num: number, precision: number): number {\n  return parseFloat(num.toPrecision(precision));\n}\n\nexport function diffVectors(vec1: Vec2<number>, vec2: Vec2<number>): number {\n  // Use Pitagora theorem to calculate the vectors\n  const vec1Length = Math.sqrt(Math.pow(vec1.x, 2) + Math.pow(vec1.y, 2));\n  const vec2Length = Math.sqrt(Math.pow(vec2.x, 2) + Math.pow(vec2.y, 2));\n  return vec1Length - vec2Length;\n}\n\nexport function createVector(\n  direction: number,\n  distance: number,\n  origin: Vec2<number> = { x: 0, y: 0 },\n): Vec2<number> {\n  return {\n    x: Math.cos(direction) * distance + origin.x,\n    y: Math.sin(direction) * distance + origin.y,\n  };\n}\n\n/**\n * Calculates the dot product of two 2-dimensional vectors.\n *\n * @param {Vec2<number>} a - The first vector.\n * @param {Vec2<number>} b - The second vector.\n * @returns {number} The dot product of vectors a and b.\n *\n * @example\n * // Define two vectors\n * const vectorA = { x: 1, y: 2 };\n * const vectorB = { x: 3, y: 4 };\n *\n * // Calculate the dot product\n * const result = dotProduct(vectorA, vectorB);\n * // result is 11 (1*3 + 2*4)\n */\nexport function dotProduct(a: Vec2<number>, b: Vec2<number>): number {\n  return a.x * b.x + a.y * b.y;\n}\n\nexport function magnitude(v: Vec2<number>): number {\n  return Math.sqrt(v.x * v.x + v.y * v.y);\n}\n\n/** Project a polygon onto an axis */\nexport function projectPolygonToAxis(\n  vertices: Vec2<number>[],\n  axis: Vec2<number>,\n): MinMax {\n  let min = Number.POSITIVE_INFINITY;\n  let max = Number.NEGATIVE_INFINITY;\n\n  // Loop through each vertex of the polygon\n  for (const vertice of vertices) {\n    // Project the vertex onto the axis using the dot product\n    const projection = dotProduct(vertice, axis);\n\n    // Update the minimum and maximum projection values\n    if (projection < min) {\n      min = projection;\n    }\n    if (projection > max) {\n      max = projection;\n    }\n  }\n\n  // Return the min and max projections\n  return { min, max };\n}\n\nexport function angleBetween(\n  v1: Vec2<number>,\n  v2: Vec2<number>,\n  tolerance: number = 1e-6,\n): number {\n  const dot = dotProduct(v1, v2);\n  const magProduct = magnitude(v1) * magnitude(v2);\n  if (magProduct === 0) return 0; // To handle division by zero\n\n  const cosTheta = dot / magProduct;\n  const cosThetaClamped = Math.min(1, Math.max(-1, cosTheta)); // Ensure cosTheta is within [-1, 1]\n\n  const theta = Math.acos(cosThetaClamped);\n\n  // Calculate the cross product to determine the sign of the angle\n  const crossProduct = v1.x * v2.y - v1.y * v2.x;\n  const angle = crossProduct >= 0 ? theta : -theta;\n\n  // If the absolute difference between the angle and zero is within the tolerance, consider it as zero\n  if (Math.abs(angle) <= tolerance) {\n    return 0;\n  }\n\n  return angle;\n}\n\nexport function randomIntFromInterval(min: number, max: number): number {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n", "import { BoundingBox } from \"../models\";\nimport { Polygon } from \"../models/polygon\";\nimport { Vec2 } from \"../models/vec\";\nimport { getVectorPerpendicular } from \"./math\";\nimport { WorldPolygon } from \"./sat-collision\";\n\nexport interface RenderingPolygonParams\n  extends Partial<CanvasFillStrokeStyles> {\n  strokeColor?: string;\n  selectedStrokeColor?: string;\n  collisionStrokeColor?: string;\n  worldCoordinates: Vec2<number>;\n}\n\nconst DEFAULT_POLYGON_PARAMS: RenderingPolygonParams = {\n  strokeColor: \"#000000\",\n  selectedStrokeColor: \"#aa0000\",\n  collisionStrokeColor: \"#00a4FF\",\n  worldCoordinates: { x: 0, y: 0 },\n};\n\nexport function renderPolygon(\n  polygon: Polygon,\n  ctx: CanvasRenderingContext2D,\n  options: RenderingPolygonParams = DEFAULT_POLYGON_PARAMS,\n): void {\n  if (!polygon) {\n    console.error(\"Polygon is null\");\n    return;\n  }\n  if (polygon.points.length < 2) {\n    console.warn(\"Too few points , can't draw polygon \");\n    return;\n  }\n\n  // Move to the first point, calculated as the origin summed to the first point coordinates\n  const origin: Vec2<number> = {\n    x: options.worldCoordinates.x + polygon.points[0].x,\n    y: options.worldCoordinates.y + +polygon.points[0].y,\n  };\n  ctx.moveTo(origin.x, origin.y);\n  ctx.strokeStyle = options.strokeColor ?? DEFAULT_POLYGON_PARAMS.strokeColor!;\n  ctx.lineWidth = 1;\n\n  if (polygon.color) {\n    ctx.fillStyle = polygon.color;\n  }\n\n  ctx.beginPath();\n  for (let i = 1; i < polygon.points.length; i++) {\n    ctx.lineTo(\n      options.worldCoordinates.x + polygon.points[i].x,\n      options.worldCoordinates.y + +polygon.points[i].y,\n    );\n  }\n  ctx.lineTo(origin.x, origin.y);\n  ctx.closePath();\n  if (polygon.fill) {\n    ctx.fill();\n  }\n  if (polygon.outline) {\n    ctx.stroke();\n  }\n}\n\nexport function createTriangle(\n  height: number,\n  color: string = \"#ffb3ba\",\n): Polygon | null {\n  if (height === 0) {\n    console.warn(\"height cannot be 0\");\n    return null;\n  }\n  return {\n    color,\n    fill: true,\n    points: [\n      { x: -height / 2, y: 0 },\n      { x: height / 2, y: height / 2 },\n      { x: height / 2, y: -height / 2 },\n    ],\n    sideLength: (2 * height) / Math.sqrt(3),\n  } as Polygon;\n}\n\nexport function createSquare(\n  sideLength: number,\n  color: string = \"#ffb3ba\",\n): Polygon | null {\n  if (sideLength === 0) {\n    console.warn(\"sideLength cannot be 0\");\n    return null;\n  }\n  return {\n    color,\n    fill: true,\n    points: [\n      { x: -sideLength / 2, y: sideLength / 2 },\n      { x: sideLength / 2, y: sideLength / 2 },\n      { x: sideLength / 2, y: -sideLength / 2 },\n      { x: -sideLength / 2, y: -sideLength / 2 },\n    ],\n    sideLength,\n  } as Polygon;\n}\n\nexport function createPolygon(defaults: Partial<Polygon> = {}): Polygon {\n  return {\n    color: defaults.color ?? \"#ffb3ba\",\n    fill: defaults.fill ?? true,\n    outline: defaults.outline ?? true,\n    numSides: defaults.numSides ?? 3,\n    points: generatePolygonPoints(\n      defaults.numSides ?? 3,\n      defaults.sideLength ?? 10,\n    ),\n    sideLength: defaults.sideLength ?? 22,\n  } as Polygon;\n}\n\nexport function updatePolygonShape(polygon: Polygon) {\n  return {\n    ...polygon,\n    points: generatePolygonPoints(polygon.numSides, polygon.sideLength),\n  } as Polygon;\n}\n\nexport function rotatePolygon(polygon: Polygon, radiants: number): Polygon {\n  return {\n    ...polygon,\n    points: generatePolygonPoints(\n      polygon.numSides,\n      polygon.sideLength,\n      radiants,\n    ),\n  };\n}\n\nexport function calculateNormals(points: Vec2<number>[]): Vec2<number>[] {\n  return calculateEdgesPerpendiculars(points).reduce(\n    (accumulation: Vec2<number>[], current: Vec2<number>) => {\n      return accumulation.some(\n        (n) =>\n          Math.abs(n.y) === Math.abs(current.y) &&\n          Math.abs(n.x) === Math.abs(current.x),\n      )\n        ? accumulation\n        : accumulation.concat(current);\n    },\n    [],\n  );\n}\n\nexport function calculateEdgesPerpendiculars(\n  points: Vec2<number>[],\n): Vec2<number>[] {\n  const perpendiculars: Vec2<number>[] = [];\n\n  const numPoints = points.length;\n\n  for (let i = 0; i < numPoints; i++) {\n    const p1 = points[i];\n    const p2 = points[(i + 1) % numPoints]; // Next point (wraps around to the first point)\n\n    // Calculate edge vector\n    const edge: Vec2<number> = {\n      x: p2.x - p1.x,\n      y: p2.y - p1.y,\n    };\n\n    // Calculate perpendicular axis by swapping x and y and negating one\n    const perpendicularAxis = getVectorPerpendicular(edge);\n    if (perpendicularAxis === null) {\n      console.warn(\n        `%c *** Cannot calculate perpendicular for edge`,\n        `background:#222; color: #FFda55`,\n        edge,\n      );\n      continue;\n    }\n\n    // Normalize the perpendicular axis\n    const length = Math.sqrt(\n      perpendicularAxis.x * perpendicularAxis.x +\n        perpendicularAxis.y * perpendicularAxis.y,\n    );\n    perpendicularAxis.x /= length;\n    perpendicularAxis.y /= length;\n\n    perpendiculars.push(perpendicularAxis);\n  }\n\n  return perpendiculars;\n}\n\nexport function getBBoxRect(\n  buondingBox: BoundingBox<number>,\n  defaults: Partial<Polygon> = {},\n): Polygon {\n  return {\n    color: defaults.color ?? \"#ffb3ba\",\n    fill: defaults.fill ?? true,\n    outline: defaults.outline ?? true,\n    numSides: 4,\n    points: [\n      { x: buondingBox.nw.x, y: buondingBox.nw.y },\n      { x: buondingBox.se.x, y: buondingBox.nw.y },\n      { x: buondingBox.se.x, y: buondingBox.se.y },\n      { x: buondingBox.nw.x, y: buondingBox.se.y },\n    ],\n  } as Polygon;\n}\n\nexport function getWorldPolygon(\n  polygon: Polygon,\n  position: Vec2<number>,\n): WorldPolygon {\n  return {\n    ...polygon,\n    worldCoordinates: { x: position.x, y: position.y },\n  };\n}\n\nexport function printWorldPolygonInfo(\n  polygon: WorldPolygon,\n  label = \"polygon\",\n) {\n  console.log(\n    `${label}: sides: ${polygon.numSides} | center: x:${polygon?.worldCoordinates.x.toFixed(1)}, y:${polygon?.worldCoordinates.y.toFixed(1)} | points: ${polygon.points.forEach((p, i) => `p[${i}]-${p.x}:${p.y},`)} | normals: ${polygon.normals?.forEach((n, i) => `n[${i}]-${n.x}:${n.y},`)}`,\n  );\n}\n\nfunction generatePolygonPoints(\n  numSides: number,\n  sideLength: number,\n  radiants?: number,\n): Vec2<number>[] {\n  const points: Vec2<number>[] = [];\n  let fullCircle = 2 * Math.PI;\n  const angleIncrement = fullCircle / numSides;\n\n  for (let i = 0; i < numSides; i++) {\n    let angle = i * angleIncrement;\n    if (radiants) {\n      angle = angle + radiants;\n    }\n\n    const x = sideLength * Math.cos(angle);\n    const y = sideLength * Math.sin(angle);\n    points.push({ x, y });\n  }\n\n  return points;\n}\n", "import { BoundingBox, Vec2 } from \"../models\";\n\nexport function isPointInAlignedBBox(\n  point: Vec2<number>,\n  bbox: BoundingBox<number>,\n) {\n  return (\n    point.x >= bbox.nw.x &&\n    point.x <= bbox.se.x &&\n    point.y >= bbox.nw.y &&\n    point.y <= bbox.se.y\n  );\n}\n", "import { intervalsOverlap, projectPolygonToAxis } from \".\";\nimport { Polygon, Vec2 } from \"../models\";\n\n/** A polygon with world coordinates information */\nexport type WorldPolygon = Polygon & {\n  worldCoordinates: Vec2<number>;\n};\n\nexport function satCollision(\n  polygonA: WorldPolygon,\n  polygonB: WorldPolygon,\n): boolean {\n  if (polygonA.normals === undefined) {\n    return false;\n  }\n  for (let z = 0; z < polygonA.normals.length; z++) {\n    // 1. Transform polygons points to space coordinates\n    const polAVertices = polygonA.points.map((point) => ({\n      x: point.x + polygonA.worldCoordinates.x,\n      y: point.y + polygonA.worldCoordinates.y,\n    }));\n    const polBVertices = polygonB.points.map((point) => ({\n      x: point.x + polygonB.worldCoordinates.x,\n      y: point.y + polygonB.worldCoordinates.y,\n    }));\n\n    // 2. Project vertices onto the perpendiculars\n    const polAProjection = projectPolygonToAxis(\n      polAVertices,\n      polygonA.normals[z],\n    );\n    const polBProjection = projectPolygonToAxis(\n      polBVertices,\n      polygonA.normals[z],\n    );\n\n    if (!intervalsOverlap(polAProjection, polBProjection)) {\n      //  if at least one perpendicular has no overlaps, they are separated\n      return false;\n    }\n  }\n  // All normals have been checked and all projections overlap, hence the two polygons collide\n  return true;\n}\n", "import { Vec2 } from \"./vec\";\nimport { BoundingBox } from \"./bbox\";\nimport { GameCycle } from \"./game-cycle\";\nimport { GraphicContext } from \"./graphic-context\";\n\nexport abstract class GameObject<T = GraphicContext> implements GameCycle {\n  id?: string;\n  ctx: T;\n  protected width: number = 64;\n  protected height: number = 64;\n  protected position: Vec2<number> = { x: 0, y: 0 };\n  protected bbox: BoundingBox<number> = {\n    nw: { x: 0, y: 0 },\n    se: { x: 0, y: 0 },\n  };\n  protected direction: number = 0;\n\n  constructor(ctx: T) {\n    this.ctx = ctx;\n  }\n\n  init(..._args: any) {}\n  update(_deltaTime: number, ..._args: any) {}\n  render(..._args: any) {}\n  clean(..._args: any) {}\n\n  setPosition(value: Vec2<number>): void {\n    this.position = value;\n  }\n  getPosition(): Vec2<number> {\n    return this.position;\n  }\n\n  getSize(): Vec2<number> | undefined {\n    return undefined;\n  }\n\n  getDirection(): number {\n    return this.direction;\n  }\n  setDirection(value: number): void {\n    this.direction = value;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n  setWidth(width: number) {\n    this.width = width;\n  }\n  getHeight(): number {\n    return this.height;\n  }\n  setHeight(height: number) {\n    this.height = height;\n  }\n}\n", "// Mainly taken from https://ricardoborges.dev/data-structures-in-typescript-linked-list\nexport class LinkedListNode<T> {\n  data: T;\n  next: LinkedListNode<T> | null = null;\n\n  constructor(data: T) {\n    this.data = data;\n  }\n}\n\nexport interface ILinkedList<T> {\n  append(data: T): LinkedListNode<T>;\n  delete(data: T): void;\n  search(data: T): LinkedListNode<T> | null;\n  traverse(): T[];\n  size(): number;\n}\n\nexport class LinkedList<T> implements ILinkedList<T> {\n  head: LinkedListNode<T> | null = null;\n  comparator: (a: T, b: T) => boolean;\n\n  constructor(comparator: (a: T, b: T) => boolean) {\n    this.comparator = comparator;\n  }\n\n  append(data: T): LinkedListNode<T> {\n    const newData = new LinkedListNode(data);\n    if (!this.head) {\n      this.head = newData;\n    } else {\n      let current = this.head;\n      while (current.next != null) {\n        current = current.next;\n      }\n      current.next = newData;\n    }\n    return newData;\n  }\n\n  delete(data: T): void {\n    if (!this.head) return;\n\n    // Check if the head node is the node to be removed\n    if (this.comparator(this.head.data, data)) {\n      this.head = this.head.next;\n      return;\n    }\n\n    let current = this.head.next;\n    let previous = this.head;\n\n    /**\n     * Search for the node to be removed and keep track of its previous node\n     **/\n    while (current) {\n      if (this.comparator(current.data, data)) {\n        current = null;\n      } else {\n        previous = current;\n        current = current.next;\n      }\n    }\n\n    /**\n     * set previous.next to the target.next, if the node target is not found,\n     * the 'previous' will point to the last node,\n     * since the last node hasn't next, nothing will happen\n     **/\n    previous.next = previous.next ? previous.next.next : null;\n  }\n\n  search(data: T): LinkedListNode<T> | null {\n    let current = this.head;\n    while (current) {\n      if (this.comparator(current.data, data)) {\n        return current;\n      }\n      current = current.next;\n    }\n    return null;\n  }\n\n  traverse() {\n    // taken from https://dev.to/glebirovich/typescript-data-structures-linked-list-3o8i\n    const array: T[] = [];\n    if (!this.head) {\n      return array;\n    }\n\n    const addToArray = (node: LinkedListNode<T>): T[] => {\n      array.push(node.data);\n      return node.next ? addToArray(node.next) : array;\n    };\n    return addToArray(this.head);\n  }\n\n  size(): number {\n    return this.traverse().length;\n  }\n}\n", "// TODO\r\nimport { BoundingBox, Vec2 } from \"../\";\r\n\r\nexport class QuadTree {\r\n    // Arbitrary constant to indicate how many elements can be stored in this quad tree node\r\n    readonly QT_NODE_CAPACITY: number | undefined;\r\n\r\n    // Axis-aligned bounding box stored as a center with half-dimensions\r\n    // to represent the boundaries of this quad tree\r\n    private boundary: BoundingBox<number>;\r\n\r\n    // Points in this quad tree node\r\n    private points: Vec2<number>[] = [];\r\n\r\n    // Children\r\n    northWest: QuadTree | undefined;\r\n    northEast: QuadTree | undefined;\r\n    southWest: QuadTree | undefined;\r\n    southEast: QuadTree | undefined;\r\n\r\n    // Methods\r\n    constructor(boundary: BoundingBox<number>) {\r\n        this.boundary = boundary;\r\n    }\r\n\r\n    insert(p: Vec2<number>): void {\r\n        this.points.push(p);\r\n    }\r\n\r\n    subdivide(): void {\r\n        const xLength = (this.boundary.se.x - this.boundary.nw.x) / 2;\r\n        const yLength = (this.boundary.nw.y - this.boundary.se.y) / 2;\r\n\r\n        // create four children that fully divide this quad into four quads of equal area\r\n        this.northWest = new QuadTree({\r\n            nw: this.boundary.nw,\r\n            se: { x: this.boundary.nw.x + xLength, y: this.boundary.nw.y + yLength },\r\n        });\r\n        this.northEast = new QuadTree({\r\n            nw: { x: this.boundary.nw.x + xLength, y: this.boundary.nw.y },\r\n            se: { x: this.boundary.se.x, y: this.boundary.nw.y + yLength },\r\n        });\r\n        this.southWest = new QuadTree({\r\n            nw: { x: this.boundary.nw.x, y: this.boundary.nw.y + yLength },\r\n            se: { x: this.boundary.nw.x + xLength, y: this.boundary.se.y },\r\n        });\r\n        this.southEast = new QuadTree({\r\n            nw: { x: this.boundary.nw.x + xLength, y: this.boundary.nw.y + yLength },\r\n            se: this.boundary.se\r\n        });\r\n    }\r\n\r\n    queryRange(_range: BoundingBox<number>): Vec2<number>[] | undefined {\r\n        return undefined\r\n    }\r\n}\r\n", "import { Vec2 } from \"./vec\";\n\nexport type UnitVector = {\n  position: Vec2<number>;\n  direction: number;\n};\n\nexport function pivotComparator(p1: UnitVector, p2: UnitVector) {\n  return (\n    p1.position.x === p2.position.x &&\n    p1.position.y === p2.position.y &&\n    p1.direction === p2.direction\n  );\n}\n", "import { AnonymousClass } from \"../models\";\n\nexport type EventType = keyof HTMLElementEventMap;\nexport type TriggerCondition<T extends EventType> = (\n  ev: HTMLElementEventMap[T],\n) => boolean;\n\nexport type AsyncEventCallback = (...args: any[]) => Promise<void>;\nexport type EventCallback = (...args: any[]) => void;\n\nexport type Callback<T extends EventType> = {\n  eventType: T;\n  ev: EventCallback | AsyncEventCallback;\n  blocking: boolean;\n  triggerCondition?: TriggerCondition<T>;\n};\n\nexport type WithEvents = {\n  events: Map<string, Callback<EventType>>;\n  abortControllers: AbortController[];\n  addCallback<T extends EventType>(\n    eventType: T,\n    id: string,\n    eventCallback: EventCallback | AsyncEventCallback,\n    blocking: boolean,\n    triggerCondition?: TriggerCondition<T>,\n  ): void;\n  enableEvent<T>(eventType: T): (eventTarget: EventTarget) => void;\n  removeCallback(id: string): void;\n  deregisterEvents(): void;\n};\n\n/**\n * A mixin function that adds event handling capabilities to a class.\n *\n * @template T\n * @param {T extends AnonymousClass<unknown>} obj - The class to extend with event handling capabilities.\n * @returns {AnonymousClass<WithEvents>} A new class that extends the original class with event handling capabilities.\n */\nexport function withEvents<T extends AnonymousClass<unknown>>(\n  obj: T,\n): AnonymousClass<WithEvents> & T {\n  return class extends obj implements WithEvents {\n    /**\n     * A map to store event callbacks by their ID.\n     * @type {Map<string, Callback>}\n     */\n    events: Map<string, Callback<EventType>> = new Map<\n      string,\n      Callback<EventType>\n    >();\n\n    /**\n     * A list of AbortController instances to manage event listeners.\n     * @type {AbortController[]}\n     */\n    abortControllers: AbortController[] = [];\n\n    /**\n     * Adds a callback for a specific event type and ID.\n     */\n    addCallback<K extends EventType>(\n      eventType: K,\n      id: string,\n      ev: EventCallback,\n      blocking: boolean,\n      triggerCondition?: TriggerCondition<K>,\n    ): void {\n      if (this.events?.has(id)) {\n        console.warn(`event with id ${id} already exists!`);\n        return;\n      }\n      this.events?.set(id, {\n        eventType,\n        ev,\n        blocking,\n        triggerCondition: triggerCondition as TriggerCondition<EventType>,\n      });\n    }\n\n    /**\n     * Removes a callback by its ID.\n     */\n    removeCallback(id: string): void {\n      if (this.events?.has(id) === false) {\n        console.warn(`cannot remove ${id}, event not found!`);\n        return;\n      }\n      this.events?.delete(id);\n    }\n\n    /**\n     * Deregisters all events by aborting their associated AbortControllers.\n     *\n     * @returns {void}\n     */\n    deregisterEvents(): void {\n      this.abortControllers.forEach((ac) => ac.abort());\n    }\n\n    /**\n     * Enables an event of a specific type on a given event target.\n     *\n     * @template T\n     * @param {T} eventType - The type of the event to enable.\n     * @returns {(eventTarget: EventTarget) => void} A function that takes an event target and adds the event listeners to it.\n     */\n    enableEvent<EventType>(\n      eventType: EventType,\n    ): (eventTarget: EventTarget) => void {\n      return (eventTarget: EventTarget) => {\n        if (eventTarget === undefined) {\n          throw new Error(\"eventTarget is undefined!\");\n        }\n        const controller =\n          this.abortControllers[\n            this.abortControllers.push(new AbortController()) - 1\n          ];\n        this.events.forEach((callBack) => {\n          eventTarget.addEventListener(\n            eventType as string,\n            async (ev: Event) => {\n              if (\n                callBack.eventType !== eventType ||\n                callBack.triggerCondition === undefined ||\n                callBack.triggerCondition(ev) === false\n              ) {\n                return;\n              }\n              if (ev === undefined) {\n                console.warn(`empty event cannot be run!`);\n                return;\n              }\n              if (callBack.blocking) {\n                return await callBack.ev(ev);\n              }\n              return callBack.ev(ev);\n            },\n            { signal: controller.signal },\n          );\n        });\n      };\n    }\n  };\n}\n", "import { Vec2, BoundingBox } from \"../../../models\";\n\nexport function getTextBBox(\n  ctx: CanvasRenderingContext2D,\n  text: string,\n  position: Vec2<number>,\n): BoundingBox<number> {\n  // Measure the text\n  const metrics: TextMetrics = ctx.measureText(text);\n\n  // Calculate the bounding box coordinates\n  const nw: Vec2<number> = {\n    x: position.x + metrics.actualBoundingBoxLeft,\n    y: position.y - metrics.actualBoundingBoxAscent,\n  };\n  const se: Vec2<number> = {\n    x: position.x + metrics.actualBoundingBoxRight,\n    y: position.y - metrics.actualBoundingBoxDescent,\n  };\n\n  return { nw, se };\n}\n", "import { GameObject, Vec2, BoundingBox } from \"../../models\";\nimport { FillStrokeStyle, getTextBBox } from \"../canvas\";\n\nexport class UILabel extends GameObject<CanvasRenderingContext2D> {\n  override id: string | undefined;\n\n  protected text: string;\n  private readonly DEFAULT_TEXT_STYLE: CanvasTextDrawingStyles = {\n    direction: \"inherit\",\n    font: \"10px sans-serif\",\n    fontKerning: \"auto\",\n    fontStretch: \"normal\",\n    fontVariantCaps: \"normal\",\n    letterSpacing: \"normal\",\n    textAlign: \"start\",\n    textBaseline: \"alphabetic\",\n    textRendering: \"auto\",\n    wordSpacing: \"normal\",\n  };\n  protected textStyle: CanvasTextDrawingStyles = this.DEFAULT_TEXT_STYLE;\n  protected textFillStyle: FillStrokeStyle | undefined = \"#000\";\n  protected textStrokeStyle: FillStrokeStyle | undefined = \"#000\";\n\n  constructor(\n    ctx: CanvasRenderingContext2D,\n    id: string,\n    posX?: number,\n    posY?: number,\n    textStyle?: Partial<CanvasTextDrawingStyles>,\n    text?: string\n  ) {\n    super(ctx);\n    this.id = id;\n    this.position = { x: posX ?? 0, y: posY ?? 0 };\n    if (textStyle !== undefined) {\n      this.textStyle = { ...this.textStyle, ...textStyle };\n    }\n    this.text = text ?? \"\";\n  }\n\n  override init(...args: any) {\n    super.init(...args);\n  }\n  override update(deltaTime: number, ...args: any) {\n    super.update(deltaTime, args);\n    if (this.text === undefined || this.position === undefined) {\n      return;\n    }\n    this.bbox = getTextBBox(this.ctx, this.text, this.position);\n  }\n  override render(...args: any) {\n    super.render(args);\n    if (this.position === undefined || this.text === undefined) {\n      return;\n    }\n\n    this.applyStyles();\n\n    this.ctx.moveTo(this.position?.x, this.position.y);\n    this.ctx.strokeText(this.text, this.position.x, this.position.y);\n    this.ctx.fillText(this.text, this.position.x, this.position.y);\n  }\n  override clean(...args: any) {\n    super.clean(args);\n  }\n\n  setText(text: string) {\n    this.text = text;\n  }\n\n  override getSize(): Vec2<number> | undefined {\n    if (\n      this.textFillStyle === undefined ||\n      this.textStrokeStyle === undefined\n    ) {\n      return;\n    }\n\n    this.applyStyles();\n    const textMetrics = this.ctx.measureText(this.text);\n\n    if (textMetrics === undefined) {\n      return undefined;\n    }\n    return {\n      x: textMetrics.width,\n      y:\n        textMetrics?.fontBoundingBoxAscent + textMetrics.fontBoundingBoxDescent,\n    };\n  }\n  getBBox(): BoundingBox<number> {\n    return this.bbox;\n  }\n\n  setTextFillStyle(style: FillStrokeStyle) {\n    this.textFillStyle = style;\n  }\n  setTextStrokeStyle(style: FillStrokeStyle) {\n    this.textStrokeStyle = style;\n  }\n  setTextStyle(textStyle: CanvasTextDrawingStyles) {\n    this.textStyle = textStyle;\n  }\n\n  protected applyStyles() {\n    //TODO add direction\n    this.ctx.font = this.textStyle?.font ?? \"20px Verdana\";\n    //TODO addfontKerning\n    //TODO addfontStretch\n    //TODO addfontVariantCaps\n    //TODO addletterSpacing\n    this.ctx.textAlign = this.textStyle?.textAlign ?? \"left\";\n    this.ctx.textBaseline = this.textStyle?.textBaseline ?? \"alphabetic\";\n    //TODO add textRendering\n    //TODO add wordSpacing\n\n    if (this.textStrokeStyle !== undefined) {\n      this.ctx.strokeStyle = this.textStrokeStyle;\n    }\n    if (this.textFillStyle !== undefined) {\n      this.ctx.fillStyle = this.textFillStyle;\n    }\n  }\n}\n", "import { isPointInAlignedBBox } from \"../../helpers\";\r\nimport { withEvents, EventCallback } from \"../with-events\";\r\nimport { UILabel } from \"./label\";\r\n\r\nconst MOUSE_ENTER_ID = \"uiClickableLabel-enter\";\r\nconst MOUSE_LEAVE_ID = \"uiClickableLabel-leave\";\r\n\r\nexport class UIClickableLabel extends withEvents(UILabel) {\r\n  protected mouseOver = false;\r\n\r\n  private mouseEnterCallbacks: EventCallback[] = [];\r\n  private mouseLeaveCallbacks: EventCallback[] = [];\r\n\r\n  override init(canvas: HTMLCanvasElement, ..._args: any): void {\r\n    super.init(canvas);\r\n\r\n    this.addCallback<\"mousemove\">(\r\n      \"mousemove\",\r\n      MOUSE_ENTER_ID,\r\n      () => {\r\n        this.playBtnMouseEnter();\r\n        this.mouseEnterCallbacks.forEach((callback) => callback());\r\n      },\r\n      false,\r\n      (ev) =>\r\n        isPointInAlignedBBox(\r\n          { x: ev.offsetX, y: ev.offsetY },\r\n          this.getBBox(),\r\n        ) && this.mouseOver === false,\r\n    );\r\n    this.enableEvent(\"mousemove\")(canvas);\r\n  }\r\n\r\n  override clean(..._args: any): void {\r\n    super.clean();\r\n    this.deregisterEvents();\r\n    this.removeCallback(MOUSE_ENTER_ID);\r\n    this.removeCallback(MOUSE_LEAVE_ID);\r\n  }\r\n\r\n  addMouseEnterCallback = (ev: EventCallback) => {\r\n    this.mouseEnterCallbacks.push(ev);\r\n  };\r\n  addMouseLeaveCallback = (ev: EventCallback) => {\r\n    this.mouseLeaveCallbacks.push(ev);\r\n  };\r\n\r\n  private playBtnMouseEnter() {\r\n    this.mouseOver = true;\r\n    this.addCallback<\"mousemove\">(\r\n      \"mousemove\",\r\n      MOUSE_LEAVE_ID,\r\n      () => {\r\n        this.playBtnMouseLeave();\r\n        this.mouseLeaveCallbacks.forEach((callback) => callback());\r\n      },\r\n      false,\r\n      (ev) =>\r\n        !isPointInAlignedBBox({ x: ev.offsetX, y: ev.offsetY }, this.getBBox()),\r\n    );\r\n  }\r\n\r\n  private playBtnMouseLeave() {\r\n    this.mouseOver = false;\r\n    this.removeCallback(MOUSE_LEAVE_ID);\r\n  }\r\n}\r\n", "import { GameObject, Vec2 } from \"../../models\";\r\nimport { FillStrokeStyle } from \"../canvas\";\r\n\r\nconst MENUNODES_FONT_SIZE = 48;\r\nconst MENUNODES_GAP = 8;\r\nconst MENUNODES_STYLE: CanvasTextDrawingStyles = {\r\n  direction: \"inherit\",\r\n  font: `${MENUNODES_FONT_SIZE} sans-serif`,\r\n  fontKerning: \"auto\",\r\n  fontStretch: \"normal\",\r\n  fontVariantCaps: \"normal\",\r\n  letterSpacing: \"normal\",\r\n  textAlign: \"start\",\r\n  textBaseline: \"alphabetic\",\r\n  textRendering: \"auto\",\r\n  wordSpacing: \"normal\",\r\n};\r\n// const MENUNODES_STROKE_COLOR = \"#00FFad\";\r\n// const MENUNODES_FILL_COLOR = \"#204Fa1\";\r\n// const MENUNODES_MOUSE_ENETER_FILL_COLOR = \"#a22\";\r\n\r\nexport type TreeItem = {\r\n  id: string;\r\n  text: string;\r\n  nodes?: TreeItem[];\r\n};\r\n\r\nexport class UIPanel extends GameObject<CanvasRenderingContext2D> {\r\n  pos: Vec2<number> = { x: 0, y: 0 };\r\n  fillStyle: FillStrokeStyle | undefined;\r\n  strokeStyle: FillStrokeStyle | undefined;\r\n  textStyle: CanvasTextDrawingStyles | undefined = MENUNODES_STYLE;\r\n\r\n  protected override width: number = 0;\r\n  protected override height: number = 0;\r\n\r\n  private items: GameObject[] = [];\r\n  private allItemsHeight = 0;\r\n  private heightGap: number = MENUNODES_GAP;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  override init(...args: any): void {\r\n    super.init(args);\r\n  }\r\n  override update(deltaTime: number, ...args: any): void {\r\n    super.update(deltaTime, args);\r\n    this.items.forEach((i) => i.update(deltaTime, args));\r\n  }\r\n  override clean(...args: any): void {\r\n    super.clean(args);\r\n    this.items.forEach((i) => i.clean(args));\r\n  }\r\n\r\n  override render(...args: any): void {\r\n    if (this.fillStyle !== undefined) {\r\n      this.ctx.fillStyle = this.fillStyle;\r\n    }\r\n    if (this.strokeStyle !== undefined) {\r\n      this.ctx.strokeStyle = this.strokeStyle;\r\n    }\r\n    this.ctx.fillRect(this.pos.x, this.pos.y, this.width, this.height);\r\n\r\n    this.items.forEach((i) => i.render(args));\r\n  }\r\n\r\n  addPanelItem(gameObject: GameObject): void {\r\n    if (gameObject === undefined) {\r\n      return;\r\n    }\r\n    this.items.push(gameObject);\r\n\r\n    // Reposition items\r\n    let currentHeightPosition = this.getPosition().y;\r\n    let currentWidthPosition = this.getPosition().y;\r\n\r\n    this.items.forEach((go) => {\r\n      go.setPosition({ x: currentWidthPosition, y: currentHeightPosition });\r\n      currentHeightPosition += this.heightGap + (go.getSize()?.y ?? 0);\r\n    });\r\n  }\r\n  getPanelItem(id: string): GameObject | undefined {\r\n    return this.items.find((i) => i.id === id);\r\n  }\r\n\r\n  setHeightGap(value: number) {\r\n    this.heightGap = value;\r\n  }\r\n  setFillStyle(value: FillStrokeStyle) {\r\n    this.fillStyle = value;\r\n  }\r\n  setStrokeStyle(value: FillStrokeStyle) {\r\n    this.strokeStyle = value;\r\n  }\r\n\r\n  // TODO: implement\r\n  // @ts-expect-error ts(6133)\r\n  private calcContentHeight() {\r\n    this.items.forEach((i) => {\r\n      this.allItemsHeight += i.getSize()?.y ?? 0;\r\n    });\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
